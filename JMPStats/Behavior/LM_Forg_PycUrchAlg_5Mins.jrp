New Table( "five_min_means",
	Add Rows( 588 ),
	New Script(
		"Source",
		Open(
			"$DOCUMENTS/GitHub/pycno-urchin/JMPStats_2023-04-09/Behavior/five_min_means.csv",
			columns(
				New Column( "trial", Numeric, "Continuous", Format( "Best", 12 ) ),
				New Column( "date",
					Numeric,
					"Continuous",
					Format( "m/d/y", 10 ),
					Input Format( "m/d/y" )
				),
				New Column( "tank", Character, "Nominal" ),
				New Column( "urchinGroup", Character, "Nominal" ),
				New Column( "pycnoTreat", Character, "Nominal" ),
				New Column( "algalTreat", Character, "Nominal" ),
				New Column( "minutes", Numeric, "Continuous", Format( "Best", 12 ) ),
				New Column( "foraging",
					Numeric,
					"Continuous",
					Format( "Best", 12 )
				),
				New Column( "moving", Numeric, "Continuous", Format( "Best", 12 ) ),
				New Column( "trialtank", Character, "Nominal" )
			),
			Import Settings(
				End Of Line( CRLF, CR, LF ),
				End Of Field( Comma, CSV( 1 ) ),
				Strip Quotes( 0 ),
				Use Apostrophe as Quotation Mark( 0 ),
				Use Regional Settings( 0 ),
				Scan Whole File( 1 ),
				Treat empty columns as numeric( 0 ),
				CompressNumericColumns( 0 ),
				CompressCharacterColumns( 0 ),
				CompressAllowListCheck( 0 ),
				Labels( 1 ),
				Column Names Start( 1 ),
				Data Starts( 2 ),
				Lines To Read( "All" ),
				Year Rule( "20xx" )
			)
		)
	),
	New Column( "trial",
		Numeric,
		"Continuous",
		Format( "Best", 12 ),
		Set Values(
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
			3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
			5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
			7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
			9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10,
			10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12,
			12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13,
			13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15,
			15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16,
			16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18,
			18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19,
			19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21,
			21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22,
			22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24,
			24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25,
			25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27,
			27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28,
			28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30,
			30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31,
			31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
			33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34,
			34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36,
			36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37,
			37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39,
			39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40,
			40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42,
			42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 43,
			43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45,
			45, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46,
			46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48,
			48, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49,
			49, 49, 49]
		)
	),
	New Column( "date",
		Numeric,
		"Continuous",
		Format( "m/d/y", 10 ),
		Input Format( "m/d/y" ),
		Set Values(
			[3711830400, 3711830400, 3711830400, 3711830400, 3711830400, 3711830400,
			3711830400, 3711830400, 3711830400, 3711830400, 3711830400, 3711830400,
			3711916800, 3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
			3711916800, 3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
			3711916800, 3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
			3711916800, 3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
			3711916800, 3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
			3711916800, 3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712003200, 3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712089600, 3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712176000, 3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712262400, 3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712348800, 3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
			3712435200, 3712435200, 3712435200, 3712435200, 3712435200, 3712435200,
			3712435200, 3712435200, 3712435200, 3712435200, 3712435200, 3712435200,
			3712435200, 3712435200, 3712435200, 3712435200, 3712435200, 3712435200,
			3712435200, 3712435200, 3712435200, 3712435200, 3712435200, 3712435200,
			3712521600, 3712521600, 3712521600, 3712521600, 3712521600, 3712521600,
			3712521600, 3712521600, 3712521600, 3712521600, 3712521600, 3712521600,
			3712521600, 3712521600, 3712521600, 3712521600, 3712521600, 3712521600,
			3712521600, 3712521600, 3712521600, 3712521600, 3712521600, 3712521600,
			3712608000, 3712608000, 3712608000, 3712608000, 3712608000, 3712608000,
			3712608000, 3712608000, 3712608000, 3712608000, 3712608000, 3712608000,
			3712608000, 3712608000, 3712608000, 3712608000, 3712608000, 3712608000,
			3712608000, 3712608000, 3712608000, 3712608000, 3712608000, 3712608000,
			3712694400, 3712694400, 3712694400, 3712694400, 3712694400, 3712694400,
			3712694400, 3712694400, 3712694400, 3712694400, 3712694400, 3712694400,
			3712694400, 3712694400, 3712694400, 3712694400, 3712694400, 3712694400,
			3712694400, 3712694400, 3712694400, 3712694400, 3712694400, 3712694400,
			3712780800, 3712780800, 3712780800, 3712780800, 3712780800, 3712780800,
			3712780800, 3712780800, 3712780800, 3712780800, 3712780800, 3712780800,
			3712780800, 3712780800, 3712780800, 3712780800, 3712780800, 3712780800,
			3712780800, 3712780800, 3712780800, 3712780800, 3712780800, 3712780800,
			3712867200, 3712867200, 3712867200, 3712867200, 3712867200, 3712867200,
			3712867200, 3712867200, 3712867200, 3712867200, 3712867200, 3712867200,
			3712867200, 3712867200, 3712867200, 3712867200, 3712867200, 3712867200,
			3712867200, 3712867200, 3712867200, 3712867200, 3712867200, 3712867200,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3712953600, 3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713040000, 3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713126400, 3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
			3713558400, 3713558400, 3713558400, 3713558400, 3713558400, 3713558400,
			3713558400, 3713558400, 3713558400, 3713558400, 3713558400, 3713558400]
		)
	),
	New Column( "tank",
		Character,
		"Nominal",
		Set Values(
			{"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1",
			"TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2",
			"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2"}
		)
	),
	New Column( "urchinGroup",
		Character,
		"Nominal",
		Set Values(
			{"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "fed", "fed", "fed", "fed", "fed",
			"fed", "fed", "fed", "fed", "fed", "fed", "fed", "starved", "starved",
			"starved", "starved", "starved", "starved", "starved", "starved",
			"starved", "starved", "starved", "starved"}
		)
	),
	New Column( "pycnoTreat",
		Character,
		"Nominal",
		Set Values(
			{"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control"}
		)
	),
	New Column( "algalTreat",
		Character,
		"Nominal",
		Set Values(
			{"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "control", "control", "control",
			"control", "control", "control", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
			"nereo", "nereo", "nereo", "nereo"}
		)
	),
	New Column( "minutes",
		Numeric,
		"Continuous",
		Format( "Best", 12 ),
		Set Values(
			[5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30,
			35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5,
			10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35,
			40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10,
			15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40,
			45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15,
			20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45,
			50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20,
			25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50,
			55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25,
			30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,
			60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30,
			35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5,
			10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35,
			40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10,
			15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40,
			45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15,
			20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45,
			50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20,
			25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50,
			55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25,
			30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,
			60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30,
			35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5,
			10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35,
			40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10,
			15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40,
			45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15,
			20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45,
			50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20,
			25, 30, 35, 40, 45, 50, 55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50,
			55, 60, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60]
		)
	),
	New Column( "foraging",
		Numeric,
		"Continuous",
		Format( "Best", 12 ),
		Set Values(
			[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 1, 1,
			1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.8,
			0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 1, 1, 0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.8, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 1, 0.8, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0.8, 0, 0.8, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0.8, 1, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0.2, 0, 0.6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 1, 1, 1, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
			0, 0.8, 0, 0, 0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2,
			1, 0.6, 0, 0, 0, 0, 0, 0, 0.6, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0.2, 0, 0, 0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.6, 0.6,
			0, 0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0.8, 0, 0,
			0, 0, 0, 0, 0, 0, 1, 0.4, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
			0.4, 0.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0.4, 0, 0, 0, 0,
			0, 0, 0, 0, 0.4, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, 1, 0.4, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0]
		)
	),
	New Column( "moving",
		Numeric,
		"Continuous",
		Format( "Best", 12 ),
		Set Values(
			[0.8, 1, 1, 1, 1, 1, 1, 0.8, 0.6, 1, 1, 1, 1, 0.8, 1, 0.8, 0.6, 0.6, 0.8,
			1, 0.4, 0, 0, 0, 0.2, 0.4, 0.4, 0.4, 0.8, 0.6, 0.6, 1, 0.8, 1, 1, 0.6,
			0.8, 0.8, 0.2, 1, 0.8, 1, 1, 0.6, 1, 1, 1, 0.8, 0.6, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 0.8, 1, 1, 0.8, 1, 0.8, 0.8, 0.4, 1, 1, 0.8, 0.8, 1, 0.6, 0.2, 0.4,
			1, 0.8, 1, 0.6, 1, 1, 0.8, 1, 0.8, 0.6, 0.6, 0.6, 0.4, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 1, 1, 1, 0.8, 1, 1, 0.8, 1, 0.8, 1, 1, 1, 1, 0.8, 1, 1, 1, 1,
			0.8, 1, 1, 1, 0.8, 0.8, 0.2, 0, 0, 0.2, 0.2, 0, 0.2, 0, 0, 0.2, 0, 0.6,
			0.8, 0.4, 0.6, 0.4, 1, 0.8, 0.8, 1, 0.4, 0.4, 0.4, 1, 1, 0.8, 1, 0.8,
			0.6, 0, 0.6, 1, 0.6, 1, 0.6, 0.2, 1, 0.6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			0.8, 0, 0.8, 1, 0.6, 0.8, 0.4, 0.8, 0.4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			0.4, 0.2, 0.6, 1, 0.4, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2, 0.6, 1,
			0.6, 1, 0.4, 0.6, 0.8, 0.8, 1, 0.6, 1, 1, 1, 1, 0.8, 0.8, 0.8, 1, 1, 0.8,
			0.4, 0.6, 1, 1, 0.8, 1, 1, 1, 0.8, 0.8, 1, 1, 1, 1, 0.8, 1, 0.6, 0.2, 1,
			1, 1, 1, 0.6, 0.6, 0.8, 1, 0, 1, 0.6, 0.4, 1, 0.8, 0.6, 1, 0.4, 0.2, 0.6,
			0.6, 0.4, 1, 0.6, 0.4, 0.4, 0.8, 1, 0.8, 0.6, 0.2, 0.4, 0.4, 0.8, 1, 1,
			0.6, 0.8, 0.6, 1, 1, 0.8, 0.6, 1, 1, 0.4, 0.2, 0, 0, 0, 0.2, 0.6, 0.6,
			0.2, 0, 0.2, 0, 1, 0.4, 0.2, 0.6, 0.6, 0.8, 0.6, 1, 0.8, 1, 1, 1, 1, 1,
			1, 0.6, 0, 0.6, 0.8, 0.8, 0.6, 0, 0.4, 0, 0.8, 0.4, 0.6, 0, 0, 0, 0, 0,
			0.2, 0, 0.2, 0, 1, 0.8, 0.8, 1, 0.8, 1, 0.6, 0.6, 0.8, 0, 0, 0, 1, 1, 1,
			1, 1, 1, 1, 1, 1, 0.8, 1, 1, 0.2, 0.8, 0, 0, 0.4, 0.6, 1, 1, 1, 1, 1,
			0.8, 0.2, 0.4, 0.6, 1, 0.8, 1, 0.8, 0.4, 1, 0.8, 1, 0.8, 1, 0.6, 0.8,
			0.8, 1, 1, 0.8, 0.8, 0.8, 0.8, 1, 0.8, 1, 1, 1, 1, 1, 0.6, 1, 0.8, 0.8,
			1, 1, 0.8, 0.6, 0.8, 0.6, 1, 0.4, 0.4, 0.4, 0.2, 0.2, 0.2, 1, 1, 0.8,
			0.6, 1, 1, 0.8, 1, 1, 0, 0.8, 1, 0.6, 1, 1, 0.4, 1, 1, 1, 0.8, 0.2, 0.8,
			1, 1, 1, 1, 0.8, 0.8, 1, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.4, 0.2, 0.8,
			1, 1, 1, 0.4, 0.4, 0.4, 0, 0.8, 0.6, 0.4, 0.2, 0.4, 0.8, 0.8, 1, 0.6, 1,
			1, 1, 1, 0.8, 0.8, 0.4, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 0.8, 0.8, 0.8, 0.8,
			1, 1, 1, 1, 1, 0.8, 0.4, 0.8, 0.8, 0.4, 0.8, 1, 0.8, 1, 1, 0.8, 1, 1, 1,
			1, 0.6, 1, 1, 1, 0.4, 1, 1, 1, 1, 1, 0.8, 0.8, 0.8, 0.6, 1, 1, 1, 1, 1,
			1, 0.8, 1, 1, 1, 1, 0.8, 0.4, 0.2, 0.8, 1, 0.4, 0.2, 0.4, 1, 1, 1, 1, 1,
			1, 1, 0.4, 0.6, 0.6, 1, 1, 0.6, 0, 0.6, 1, 1, 0.8, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 0.8, 1, 1, 1, 1, 1, 1, 1, 0.6, 1, 1, 1]
		)
	),
	New Column( "trialtank",
		Character,
		"Nominal",
		Set Values(
			{"1TF2", "1TF2", "1TF2", "1TF2", "1TF2", "1TF2", "1TF2", "1TF2", "1TF2",
			"1TF2", "1TF2", "1TF2", "2TF1", "2TF1", "2TF1", "2TF1", "2TF1", "2TF1",
			"2TF1", "2TF1", "2TF1", "2TF1", "2TF1", "2TF1", "3TF2", "3TF2", "3TF2",
			"3TF2", "3TF2", "3TF2", "3TF2", "3TF2", "3TF2", "3TF2", "3TF2", "3TF2",
			"4TF1", "4TF1", "4TF1", "4TF1", "4TF1", "4TF1", "4TF1", "4TF1", "4TF1",
			"4TF1", "4TF1", "4TF1", "5TF2", "5TF2", "5TF2", "5TF2", "5TF2", "5TF2",
			"5TF2", "5TF2", "5TF2", "5TF2", "5TF2", "5TF2", "6TF1", "6TF1", "6TF1",
			"6TF1", "6TF1", "6TF1", "6TF1", "6TF1", "6TF1", "6TF1", "6TF1", "6TF1",
			"7TF2", "7TF2", "7TF2", "7TF2", "7TF2", "7TF2", "7TF2", "7TF2", "7TF2",
			"7TF2", "7TF2", "7TF2", "8TF1", "8TF1", "8TF1", "8TF1", "8TF1", "8TF1",
			"8TF1", "8TF1", "8TF1", "8TF1", "8TF1", "8TF1", "9TF2", "9TF2", "9TF2",
			"9TF2", "9TF2", "9TF2", "9TF2", "9TF2", "9TF2", "9TF2", "9TF2", "9TF2",
			"10TF1", "10TF1", "10TF1", "10TF1", "10TF1", "10TF1", "10TF1", "10TF1",
			"10TF1", "10TF1", "10TF1", "10TF1", "11TF2", "11TF2", "11TF2", "11TF2",
			"11TF2", "11TF2", "11TF2", "11TF2", "11TF2", "11TF2", "11TF2", "11TF2",
			"12TF1", "12TF1", "12TF1", "12TF1", "12TF1", "12TF1", "12TF1", "12TF1",
			"12TF1", "12TF1", "12TF1", "12TF1", "13TF2", "13TF2", "13TF2", "13TF2",
			"13TF2", "13TF2", "13TF2", "13TF2", "13TF2", "13TF2", "13TF2", "13TF2",
			"14TF1", "14TF1", "14TF1", "14TF1", "14TF1", "14TF1", "14TF1", "14TF1",
			"14TF1", "14TF1", "14TF1", "14TF1", "15TF2", "15TF2", "15TF2", "15TF2",
			"15TF2", "15TF2", "15TF2", "15TF2", "15TF2", "15TF2", "15TF2", "15TF2",
			"16TF1", "16TF1", "16TF1", "16TF1", "16TF1", "16TF1", "16TF1", "16TF1",
			"16TF1", "16TF1", "16TF1", "16TF1", "17TF2", "17TF2", "17TF2", "17TF2",
			"17TF2", "17TF2", "17TF2", "17TF2", "17TF2", "17TF2", "17TF2", "17TF2",
			"18TF1", "18TF1", "18TF1", "18TF1", "18TF1", "18TF1", "18TF1", "18TF1",
			"18TF1", "18TF1", "18TF1", "18TF1", "19TF2", "19TF2", "19TF2", "19TF2",
			"19TF2", "19TF2", "19TF2", "19TF2", "19TF2", "19TF2", "19TF2", "19TF2",
			"20TF1", "20TF1", "20TF1", "20TF1", "20TF1", "20TF1", "20TF1", "20TF1",
			"20TF1", "20TF1", "20TF1", "20TF1", "21TF2", "21TF2", "21TF2", "21TF2",
			"21TF2", "21TF2", "21TF2", "21TF2", "21TF2", "21TF2", "21TF2", "21TF2",
			"22TF1", "22TF1", "22TF1", "22TF1", "22TF1", "22TF1", "22TF1", "22TF1",
			"22TF1", "22TF1", "22TF1", "22TF1", "23TF2", "23TF2", "23TF2", "23TF2",
			"23TF2", "23TF2", "23TF2", "23TF2", "23TF2", "23TF2", "23TF2", "23TF2",
			"24TF1", "24TF1", "24TF1", "24TF1", "24TF1", "24TF1", "24TF1", "24TF1",
			"24TF1", "24TF1", "24TF1", "24TF1", "25TF2", "25TF2", "25TF2", "25TF2",
			"25TF2", "25TF2", "25TF2", "25TF2", "25TF2", "25TF2", "25TF2", "25TF2",
			"26TF1", "26TF1", "26TF1", "26TF1", "26TF1", "26TF1", "26TF1", "26TF1",
			"26TF1", "26TF1", "26TF1", "26TF1", "27TF2", "27TF2", "27TF2", "27TF2",
			"27TF2", "27TF2", "27TF2", "27TF2", "27TF2", "27TF2", "27TF2", "27TF2",
			"28TF1", "28TF1", "28TF1", "28TF1", "28TF1", "28TF1", "28TF1", "28TF1",
			"28TF1", "28TF1", "28TF1", "28TF1", "29TF2", "29TF2", "29TF2", "29TF2",
			"29TF2", "29TF2", "29TF2", "29TF2", "29TF2", "29TF2", "29TF2", "29TF2",
			"30TF1", "30TF1", "30TF1", "30TF1", "30TF1", "30TF1", "30TF1", "30TF1",
			"30TF1", "30TF1", "30TF1", "30TF1", "31TF2", "31TF2", "31TF2", "31TF2",
			"31TF2", "31TF2", "31TF2", "31TF2", "31TF2", "31TF2", "31TF2", "31TF2",
			"32TF1", "32TF1", "32TF1", "32TF1", "32TF1", "32TF1", "32TF1", "32TF1",
			"32TF1", "32TF1", "32TF1", "32TF1", "33TF2", "33TF2", "33TF2", "33TF2",
			"33TF2", "33TF2", "33TF2", "33TF2", "33TF2", "33TF2", "33TF2", "33TF2",
			"34TF1", "34TF1", "34TF1", "34TF1", "34TF1", "34TF1", "34TF1", "34TF1",
			"34TF1", "34TF1", "34TF1", "34TF1", "35TF2", "35TF2", "35TF2", "35TF2",
			"35TF2", "35TF2", "35TF2", "35TF2", "35TF2", "35TF2", "35TF2", "35TF2",
			"36TF1", "36TF1", "36TF1", "36TF1", "36TF1", "36TF1", "36TF1", "36TF1",
			"36TF1", "36TF1", "36TF1", "36TF1", "37TF2", "37TF2", "37TF2", "37TF2",
			"37TF2", "37TF2", "37TF2", "37TF2", "37TF2", "37TF2", "37TF2", "37TF2",
			"38TF1", "38TF1", "38TF1", "38TF1", "38TF1", "38TF1", "38TF1", "38TF1",
			"38TF1", "38TF1", "38TF1", "38TF1", "39TF2", "39TF2", "39TF2", "39TF2",
			"39TF2", "39TF2", "39TF2", "39TF2", "39TF2", "39TF2", "39TF2", "39TF2",
			"40TF1", "40TF1", "40TF1", "40TF1", "40TF1", "40TF1", "40TF1", "40TF1",
			"40TF1", "40TF1", "40TF1", "40TF1", "41TF2", "41TF2", "41TF2", "41TF2",
			"41TF2", "41TF2", "41TF2", "41TF2", "41TF2", "41TF2", "41TF2", "41TF2",
			"42TF1", "42TF1", "42TF1", "42TF1", "42TF1", "42TF1", "42TF1", "42TF1",
			"42TF1", "42TF1", "42TF1", "42TF1", "43TF2", "43TF2", "43TF2", "43TF2",
			"43TF2", "43TF2", "43TF2", "43TF2", "43TF2", "43TF2", "43TF2", "43TF2",
			"44TF1", "44TF1", "44TF1", "44TF1", "44TF1", "44TF1", "44TF1", "44TF1",
			"44TF1", "44TF1", "44TF1", "44TF1", "45TF2", "45TF2", "45TF2", "45TF2",
			"45TF2", "45TF2", "45TF2", "45TF2", "45TF2", "45TF2", "45TF2", "45TF2",
			"46TF1", "46TF1", "46TF1", "46TF1", "46TF1", "46TF1", "46TF1", "46TF1",
			"46TF1", "46TF1", "46TF1", "46TF1", "47TF2", "47TF2", "47TF2", "47TF2",
			"47TF2", "47TF2", "47TF2", "47TF2", "47TF2", "47TF2", "47TF2", "47TF2",
			"48TF1", "48TF1", "48TF1", "48TF1", "48TF1", "48TF1", "48TF1", "48TF1",
			"48TF1", "48TF1", "48TF1", "48TF1", "49TF2", "49TF2", "49TF2", "49TF2",
			"49TF2", "49TF2", "49TF2", "49TF2", "49TF2", "49TF2", "49TF2", "49TF2"}
		)
	)
) << Run Formulas;
Fit Model(
	Y( :foraging ),
	Effects(
		:urchinGroup, :pycnoTreat, :urchinGroup * :pycnoTreat, :algalTreat,
		:urchinGroup * :algalTreat, :pycnoTreat * :algalTreat,
		:urchinGroup * :pycnoTreat * :algalTreat, :minutes, :urchinGroup * :minutes,
		:pycnoTreat * :minutes, :urchinGroup * :pycnoTreat * :minutes,
		:algalTreat * :minutes, :urchinGroup * :algalTreat * :minutes,
		:pycnoTreat * :algalTreat * :minutes,
		:urchinGroup * :pycnoTreat * :algalTreat * :minutes
	),
	Random Effects( :trialtank[:urchinGroup, :pycnoTreat, :algalTreat] ),
	NoBounds( 1 ),
	Personality( "Standard Least Squares" ),
	Method( "REML" ),
	Emphasis( "Effect Screening" ),
	Run(
		Profiler(
			1,
			Confidence Intervals( 1 ),
			Term Value(
				urchinGroup( "fed", Lock( 0 ), Show( 1 ) ),
				pycnoTreat( "control", Lock( 0 ), Show( 1 ) ),
				algalTreat( "control", Lock( 0 ), Show( 1 ) ),
				minutes( 32.5, Lock( 0 ), Show( 1 ) )
			)
		),
		:foraging << {Summary of Fit( 0 ), Analysis of Variance( 0 ),
		Parameter Estimates( 1 ), Sorted Estimates( 0 ), Scaled Estimates( 0 ),
		Plot Actual by Predicted( 1 ), Plot Regression( 0 ),
		Plot Residual by Predicted( 1 ), Plot Studentized Residuals( 1 ),
		Plot Effect Leverage( 0 ), Plot Residual by Normal Quantiles( 0 )}
	),
	SendToReport(
		Dispatch(
			{"Response foraging"},
			"Fixed Effect Tests",
			OutlineBox,
			{Close( 0 )}
		)
	)
);