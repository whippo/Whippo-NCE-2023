Local Here(
	(table1 = New Table( "ten_min_means 2",
		Add Rows( 294 ),
		New Script(
			"Source",
			Open(
				"$DOCUMENTS/Git/pycno-urchin/Data/2021/ten_min_means.csv",
				columns(
					New Column( "trial",
						Numeric,
						"Continuous",
						Format( "Best", 12 )
					),
					New Column( "date",
						Numeric,
						"Continuous",
						Format( "yyyy-mm-dd", 10 ),
						Input Format( "yyyy-mm-dd" )
					),
					New Column( "tank", Character, "Nominal" ),
					New Column( "urchinGroup", Character, "Nominal" ),
					New Column( "pycnoTreat", Character, "Nominal" ),
					New Column( "algalTreat", Character, "Nominal" ),
					New Column( "minutes",
						Numeric,
						"Continuous",
						Format( "Best", 12 )
					),
					New Column( "foraging",
						Numeric,
						"Continuous",
						Format( "Best", 12 )
					),
					New Column( "moving",
						Numeric,
						"Continuous",
						Format( "Best", 12 )
					)
				),
				Import Settings(
					End Of Line( CRLF, CR, LF ),
					End Of Field( Comma, CSV( 1 ) ),
					Strip Quotes( 0 ),
					Use Apostrophe as Quotation Mark( 0 ),
					Use Regional Settings( 0 ),
					Scan Whole File( 1 ),
					Treat empty columns as numeric( 0 ),
					CompressNumericColumns( 0 ),
					CompressCharacterColumns( 0 ),
					CompressAllowListCheck( 0 ),
					Labels( 1 ),
					Column Names Start( 1 ),
					First Named Column( 1 ),
					Data Starts( 2 ),
					Lines To Read( "All" ),
					Year Rule( "20xx" )
				)
			)
		),
		New Column( "ID",
			Character,
			"Nominal",
			Set Selected,
			Set Values(
				{"1_TF2", "1_TF2", "1_TF2", "1_TF2", "1_TF2", "1_TF2", "2_TF1",
				"2_TF1", "2_TF1", "2_TF1", "2_TF1", "2_TF1", "3_TF2", "3_TF2",
				"3_TF2", "3_TF2", "3_TF2", "3_TF2", "4_TF1", "4_TF1", "4_TF1",
				"4_TF1", "4_TF1", "4_TF1", "5_TF2", "5_TF2", "5_TF2", "5_TF2",
				"5_TF2", "5_TF2", "6_TF1", "6_TF1", "6_TF1", "6_TF1", "6_TF1",
				"6_TF1", "7_TF2", "7_TF2", "7_TF2", "7_TF2", "7_TF2", "7_TF2",
				"8_TF1", "8_TF1", "8_TF1", "8_TF1", "8_TF1", "8_TF1", "9_TF2",
				"9_TF2", "9_TF2", "9_TF2", "9_TF2", "9_TF2", "10_TF1", "10_TF1",
				"10_TF1", "10_TF1", "10_TF1", "10_TF1", "11_TF2", "11_TF2", "11_TF2",
				"11_TF2", "11_TF2", "11_TF2", "12_TF1", "12_TF1", "12_TF1", "12_TF1",
				"12_TF1", "12_TF1", "13_TF2", "13_TF2", "13_TF2", "13_TF2", "13_TF2",
				"13_TF2", "14_TF1", "14_TF1", "14_TF1", "14_TF1", "14_TF1", "14_TF1",
				"15_TF2", "15_TF2", "15_TF2", "15_TF2", "15_TF2", "15_TF2", "16_TF1",
				"16_TF1", "16_TF1", "16_TF1", "16_TF1", "16_TF1", "17_TF2", "17_TF2",
				"17_TF2", "17_TF2", "17_TF2", "17_TF2", "18_TF1", "18_TF1", "18_TF1",
				"18_TF1", "18_TF1", "18_TF1", "19_TF2", "19_TF2", "19_TF2", "19_TF2",
				"19_TF2", "19_TF2", "20_TF1", "20_TF1", "20_TF1", "20_TF1", "20_TF1",
				"20_TF1", "21_TF2", "21_TF2", "21_TF2", "21_TF2", "21_TF2", "21_TF2",
				"22_TF1", "22_TF1", "22_TF1", "22_TF1", "22_TF1", "22_TF1", "23_TF2",
				"23_TF2", "23_TF2", "23_TF2", "23_TF2", "23_TF2", "24_TF1", "24_TF1",
				"24_TF1", "24_TF1", "24_TF1", "24_TF1", "25_TF2", "25_TF2", "25_TF2",
				"25_TF2", "25_TF2", "25_TF2", "26_TF1", "26_TF1", "26_TF1", "26_TF1",
				"26_TF1", "26_TF1", "27_TF2", "27_TF2", "27_TF2", "27_TF2", "27_TF2",
				"27_TF2", "28_TF1", "28_TF1", "28_TF1", "28_TF1", "28_TF1", "28_TF1",
				"29_TF2", "29_TF2", "29_TF2", "29_TF2", "29_TF2", "29_TF2", "30_TF1",
				"30_TF1", "30_TF1", "30_TF1", "30_TF1", "30_TF1", "31_TF2", "31_TF2",
				"31_TF2", "31_TF2", "31_TF2", "31_TF2", "32_TF1", "32_TF1", "32_TF1",
				"32_TF1", "32_TF1", "32_TF1", "33_TF2", "33_TF2", "33_TF2", "33_TF2",
				"33_TF2", "33_TF2", "34_TF1", "34_TF1", "34_TF1", "34_TF1", "34_TF1",
				"34_TF1", "35_TF2", "35_TF2", "35_TF2", "35_TF2", "35_TF2", "35_TF2",
				"36_TF1", "36_TF1", "36_TF1", "36_TF1", "36_TF1", "36_TF1", "37_TF2",
				"37_TF2", "37_TF2", "37_TF2", "37_TF2", "37_TF2", "38_TF1", "38_TF1",
				"38_TF1", "38_TF1", "38_TF1", "38_TF1", "39_TF2", "39_TF2", "39_TF2",
				"39_TF2", "39_TF2", "39_TF2", "40_TF1", "40_TF1", "40_TF1", "40_TF1",
				"40_TF1", "40_TF1", "41_TF2", "41_TF2", "41_TF2", "41_TF2", "41_TF2",
				"41_TF2", "42_TF1", "42_TF1", "42_TF1", "42_TF1", "42_TF1", "42_TF1",
				"43_TF2", "43_TF2", "43_TF2", "43_TF2", "43_TF2", "43_TF2", "44_TF1",
				"44_TF1", "44_TF1", "44_TF1", "44_TF1", "44_TF1", "45_TF2", "45_TF2",
				"45_TF2", "45_TF2", "45_TF2", "45_TF2", "46_TF1", "46_TF1", "46_TF1",
				"46_TF1", "46_TF1", "46_TF1", "47_TF2", "47_TF2", "47_TF2", "47_TF2",
				"47_TF2", "47_TF2", "48_TF1", "48_TF1", "48_TF1", "48_TF1", "48_TF1",
				"48_TF1", "49_TF2", "49_TF2", "49_TF2", "49_TF2", "49_TF2", "49_TF2"
				}
			)
		),
		New Column( "trial",
			Numeric,
			"Nominal",
			Format( "Best", 12 ),
			Set Values(
				[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
				4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8,
				8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11,
				11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14,
				14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17,
				17, 17, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 20, 20,
				20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23,
				23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25,
				26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28,
				28, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31,
				31, 31, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 34, 34, 34,
				34, 34, 34, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 37, 37,
				37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 40,
				40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42,
				43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45,
				45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48,
				48, 48, 49, 49, 49, 49, 49, 49]
			)
		),
		New Column( "date",
			Numeric,
			"Continuous",
			Format( "yyyy-mm-dd", 10 ),
			Input Format( "yyyy-mm-dd" ),
			Set Values(
				[3711830400, 3711830400, 3711830400, 3711830400, 3711830400,
				3711830400, 3711916800, 3711916800, 3711916800, 3711916800,
				3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
				3711916800, 3711916800, 3711916800, 3711916800, 3711916800,
				3711916800, 3711916800, 3711916800, 3711916800, 3712003200,
				3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
				3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
				3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
				3712003200, 3712003200, 3712003200, 3712003200, 3712003200,
				3712003200, 3712003200, 3712003200, 3712089600, 3712089600,
				3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
				3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
				3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
				3712089600, 3712089600, 3712089600, 3712089600, 3712089600,
				3712089600, 3712089600, 3712176000, 3712176000, 3712176000,
				3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
				3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
				3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
				3712176000, 3712176000, 3712176000, 3712176000, 3712176000,
				3712176000, 3712262400, 3712262400, 3712262400, 3712262400,
				3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
				3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
				3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
				3712262400, 3712262400, 3712262400, 3712262400, 3712262400,
				3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
				3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
				3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
				3712348800, 3712348800, 3712348800, 3712348800, 3712348800,
				3712348800, 3712348800, 3712348800, 3712348800, 3712435200,
				3712435200, 3712435200, 3712435200, 3712435200, 3712435200,
				3712435200, 3712435200, 3712435200, 3712435200, 3712435200,
				3712435200, 3712521600, 3712521600, 3712521600, 3712521600,
				3712521600, 3712521600, 3712521600, 3712521600, 3712521600,
				3712521600, 3712521600, 3712521600, 3712608000, 3712608000,
				3712608000, 3712608000, 3712608000, 3712608000, 3712608000,
				3712608000, 3712608000, 3712608000, 3712608000, 3712608000,
				3712694400, 3712694400, 3712694400, 3712694400, 3712694400,
				3712694400, 3712694400, 3712694400, 3712694400, 3712694400,
				3712694400, 3712694400, 3712780800, 3712780800, 3712780800,
				3712780800, 3712780800, 3712780800, 3712780800, 3712780800,
				3712780800, 3712780800, 3712780800, 3712780800, 3712867200,
				3712867200, 3712867200, 3712867200, 3712867200, 3712867200,
				3712867200, 3712867200, 3712867200, 3712867200, 3712867200,
				3712867200, 3712953600, 3712953600, 3712953600, 3712953600,
				3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
				3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
				3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
				3712953600, 3712953600, 3712953600, 3712953600, 3712953600,
				3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
				3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
				3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
				3713040000, 3713040000, 3713040000, 3713040000, 3713040000,
				3713040000, 3713040000, 3713040000, 3713040000, 3713126400,
				3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
				3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
				3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
				3713126400, 3713126400, 3713126400, 3713126400, 3713126400,
				3713126400, 3713126400, 3713126400, 3713558400, 3713558400,
				3713558400, 3713558400, 3713558400, 3713558400]
			)
		),
		New Column( "tank",
			Character,
			"Nominal",
			Set Values(
				{"TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1",
				"TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1",
				"TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2",
				"TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2",
				"TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2",
				"TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1",
				"TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1",
				"TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1",
				"TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2",
				"TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2",
				"TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2",
				"TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1",
				"TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1",
				"TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1",
				"TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2",
				"TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2",
				"TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2",
				"TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1",
				"TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1",
				"TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1",
				"TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2",
				"TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2",
				"TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2",
				"TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1",
				"TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1", "TF1", "TF1",
				"TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2", "TF2", "TF1",
				"TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2", "TF2", "TF2",
				"TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2", "TF2", "TF2",
				"TF2", "TF2", "TF2", "TF1", "TF1", "TF1", "TF1", "TF1", "TF1", "TF2",
				"TF2", "TF2", "TF2", "TF2", "TF2"}
			)
		),
		New Column( "urchinGroup",
			Character,
			"Nominal",
			Set Values(
				{"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "starved", "starved", "starved", "starved", "starved",
				"starved", "fed", "fed", "fed", "fed", "fed", "fed", "starved",
				"starved", "starved", "starved", "starved", "starved", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "starved",
				"starved", "starved", "starved", "starved", "starved", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "fed", "fed", "fed", "fed", "fed", "fed", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "fed", "fed",
				"fed", "fed", "fed", "fed", "starved", "starved", "starved",
				"starved", "starved", "starved", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "fed", "starved", "starved", "starved", "starved",
				"starved", "starved", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed", "fed",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"starved", "starved", "starved", "starved", "starved", "starved",
				"fed", "fed", "fed", "fed", "fed", "fed", "starved", "starved",
				"starved", "starved", "starved", "starved"}
			)
		),
		New Column( "pycnoTreat",
			Character,
			"Nominal",
			Set Values(
				{"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "control",
				"control", "control", "control", "control", "control", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "control", "control",
				"control", "control", "control", "control", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "control", "control", "control", "control", "control",
				"control", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "control", "control", "control",
				"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "control", "control", "control", "control", "control",
				"control", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "control",
				"control", "control", "control", "control", "control", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "pycno", "pycno", "pycno",
				"pycno", "pycno", "pycno", "pycno", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control"}
			)
		),
		New Column( "algalTreat",
			Character,
			"Nominal",
			Set Values(
				{"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "control", "control",
				"control", "control", "control", "control", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "control", "control", "control",
				"control", "control", "control", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "control", "control", "control",
				"control", "control", "control", "control", "control", "control",
				"control", "control", "control", "nereo", "nereo", "nereo", "nereo",
				"nereo", "nereo", "nereo", "nereo", "nereo", "nereo", "nereo",
				"nereo"}
			)
		),
		New Column( "minutes",
			Numeric,
			"Nominal",
			Format( "Best", 12 ),
			Set Values(
				[10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50,
				60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40,
				50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30,
				40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20,
				30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10,
				20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60,
				10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50,
				60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40,
				50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30,
				40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20,
				30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10,
				20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60,
				10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50,
				60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40,
				50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30,
				40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20,
				30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10, 20, 30, 40, 50, 60, 10,
				20, 30, 40, 50, 60]
			)
		),
		New Column( "foraging",
			Numeric,
			"Continuous",
			Format( "Best", 12 ),
			Set Values(
				[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0.4, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.3, 0, 0, 0, 0,
				0.9, 1, 1, 1, 1, 1, 0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
				1, 1, 0, 0, 0, 0, 0, 0, 0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.4, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0.9, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.8, 1, 1, 1, 1, 1, 0,
				0, 0, 0, 0, 0, 0, 0.3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0.7,
				1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.5, 0.4, 0, 0, 0, 0.1, 0,
				0, 0, 0, 0, 0.1, 0.8, 0, 0, 0, 0.3, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0, 0, 0, 1, 1, 1, 0.9, 0,
				0, 0, 0, 0.7, 0, 0, 0, 1, 0, 0, 0, 0, 0.4, 0, 0, 0, 0, 0, 0, 1, 0.7,
				0, 0, 0, 0, 0.2, 0, 0.3, 0, 0, 0, 0.7, 0, 0, 0, 0, 0]
			)
		),
		New Column( "moving",
			Numeric,
			"Continuous",
			Format( "Best", 12 ),
			Set Values(
				[0.9, 1, 1, 0.9, 0.8, 1, 0.9, 0.9, 0.6, 0.9, 0.2, 0, 0.3, 0.4, 0.7,
				0.8, 0.9, 0.8, 0.8, 0.6, 0.9, 0.8, 1, 0.9, 0.8, 1, 1, 1, 1, 0.9, 0.9,
				0.9, 0.6, 1, 0.8, 0.8, 0.3, 0.9, 0.8, 1, 0.9, 0.7, 0.6, 0.2, 0, 0, 0,
				0, 1, 0.9, 1, 0.9, 0.9, 1, 0.9, 1, 1, 0.9, 1, 0.8, 0.1, 0.1, 0.1,
				0.1, 0.1, 0.3, 0.6, 0.5, 0.9, 0.9, 0.4, 0.7, 0.9, 0.9, 0.3, 0.8, 0.8,
				0.4, 0.8, 1, 1, 1, 1, 1, 0.4, 0.9, 0.7, 0.6, 0.7, 1, 1, 1, 1, 1, 0.3,
				0.8, 0.3, 0, 0, 0, 0, 0, 0.6, 0.8, 0.8, 0.5, 0.8, 0.8, 1, 1, 0.8,
				0.9, 0.9, 0.5, 1, 0.9, 1, 0.8, 1, 1, 0.9, 0.4, 1, 1, 0.6, 0.9, 0.5,
				0.5, 0.9, 0.8, 0.3, 0.6, 0.7, 0.5, 0.6, 0.9, 0.4, 0.4, 0.9, 0.8, 0.7,
				1, 0.7, 1, 0.3, 0, 0.1, 0.6, 0.1, 0.1, 0.7, 0.4, 0.7, 0.8, 0.9, 1, 1,
				0.8, 0.3, 0.8, 0.3, 0.2, 0.6, 0.3, 0, 0, 0.1, 0.1, 0.9, 0.9, 0.9,
				0.6, 0.4, 0, 1, 1, 1, 1, 0.9, 1, 0.5, 0, 0.5, 1, 1, 0.9, 0.3, 0.8,
				0.9, 0.6, 0.9, 0.9, 0.8, 0.8, 1, 0.8, 0.8, 0.9, 1, 1, 0.8, 0.9, 0.9,
				0.9, 0.7, 0.8, 0.4, 0.3, 0.2, 1, 0.7, 1, 0.9, 0.5, 0.9, 0.8, 0.7, 1,
				0.9, 0.5, 1, 1, 0.8, 0.9, 1, 1, 1, 1, 0.7, 0.5, 1, 0.7, 0.4, 0.4,
				0.5, 0.3, 0.8, 0.8, 1, 1, 0.8, 0.6, 1, 1, 1, 1, 0.8, 0.8, 1, 1, 0.9,
				0.6, 0.6, 0.9, 0.9, 0.9, 1, 1, 0.8, 1, 0.7, 1, 1, 0.8, 0.7, 1, 1, 1,
				0.9, 1, 0.9, 0.3, 0.9, 0.3, 0.7, 1, 1, 1, 0.5, 0.8, 0.8, 0.3, 1, 0.9,
				1, 1, 1, 1, 0.9, 1, 1, 1, 0.8, 1]
			)
		)
	)) << Run Formulas;
	New Window( "movement",
		table1 << Graph Builder(
			Variables( X( :urchinGroup ), Y( :moving ), Overlay( :algalTreat ) ),
			Elements( Smoother( X, Y, Legend( 18 ) ), Points( X, Y, Legend( 19 ) ) ),
			SendToReport(
				Dispatch(
					{},
					"400",
					ScaleBox,
					{Legend Model(
						18,
						Properties( 0, {Line Color( 0 )}, Item ID( "control", 1 ) ),
						Properties( 1, {Line Color( 12 )}, Item ID( "nereo", 1 ) )
					)}
				)
			)
		)
	) << Move Window( 224, 135 ) << Set Window Icon( "Trellis" );
)